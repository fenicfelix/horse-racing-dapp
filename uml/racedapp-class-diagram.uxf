<diagram program="umletino" version="15.1"><zoom_level>9</zoom_level><element><id>UMLClass</id><coordinates><x>0</x><y>720</y><w>108</w><h>99</h></coordinates><panel_attributes>Bet
--
- id: uint256
- bettorId: Bettor
- amount:uint256
- paidOut:bool
--
+ claim(): bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>189</x><y>0</y><w>108</w><h>108</h></coordinates><panel_attributes>&lt;enumeration&gt;
RaceStatus
--
OPEN
LOCKED
IN_PROGRESS
COMPLETED
NULLIFIED</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>171</x><y>342</y><w>270</w><h>261</h></coordinates><panel_attributes>RaceDApp
--
- admin: address
- races: Race[]
- bets: Bet[]
--
+ createRace(uint256)
+ placeBet(raceId: uint256, amount:uint256): bool
+ lockRace(raceId: uint256): void
+ auditRace(raceId: uint256): bool
+ startRace(raceId: uint256): void
+ declareWinnner(raceId: uint256): bool
+ fulfillRandomWords(uint256, uint256[])
+ verifyVRFProof(raceId: uint256)
+ announceWinners(raceId: uint256)
+ performPayout(raceId: uint256)
+ getRaceHorses()
+ getRaceStatus(uint256)
+ withdrawFees(address)



+ initiateRace(raceId: uint256): uint256
+ processPayouts(raceId: uint256): void
+ withdrawWinnings(betId: uint256): void
+ verifyVRFProof(requestId: uint256, proof: bytes): bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>306</x><y>0</y><w>117</w><h>90</h></coordinates><panel_attributes>&lt;enumeration&gt;
AuditResult
--
VALID
INVALID_PROOF
SUSPICIOUS_TIMING</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>189</x><y>171</y><w>297</w><h>90</h></coordinates><panel_attributes>*Key workflow:*
bg=yellow
1. Bettor places bet (ERC20 tockens)
2. Admin locks bets
3. Chainlink VRF provides randomness
4. Winner declared automatically
5. Payouts are processed
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>369</x><y>252</y><w>27</w><h>108</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>10;100;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>54</x><y>531</y><w>135</w><h>207</h></coordinates><panel_attributes>lt=-
m1=0..*
m2=1
contains &gt;</panel_attributes><additional_attributes>10;210;10;10;130;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>549</x><y>648</y><w>279</w><h>99</h></coordinates><panel_attributes>VRFVerifier
--
- coordinator: Address
--
+ verifiedRequests: mapping(uint256 =&gt; bool)
+ auditTransaction(txHash: bytes32): AuditResult
+ getProofStatus(requestId: uint256): bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>531</x><y>495</y><w>297</w><h>63</h></coordinates><panel_attributes>*Audit Trail:*
bg=yellow
- Timestamp verification
- RequestId uniqueness
- Proof validation
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>738</x><y>549</y><w>27</w><h>117</h></coordinates><panel_attributes>lt=.</panel_attributes><additional_attributes>10;110;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>432</x><y>567</y><w>261</w><h>99</h></coordinates><panel_attributes>lt=-
verifies &gt;</panel_attributes><additional_attributes>270;90;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>279</x><y>594</y><w>72</w><h>99</h></coordinates><panel_attributes>lt=-
Audits &gt;</panel_attributes><additional_attributes>10;90;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>450</x><y>810</y><w>360</w><h>72</h></coordinates><panel_attributes>VRFCoodinator
--
--
requestRandomWords(subId: uint64, keyHash: bytes32,...): uint256</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>675</x><y>738</y><w>72</w><h>90</h></coordinates><panel_attributes>lt=&lt;.
validates</panel_attributes><additional_attributes>10;80;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>423</x><y>594</y><w>135</w><h>234</h></coordinates><panel_attributes>lt=-
requests &gt;</panel_attributes><additional_attributes>120;240;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>432</x><y>405</y><w>216</w><h>45</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m1=0..n
m2=1
manages</panel_attributes><additional_attributes>10;20;220;20</additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>342</y><w>135</w><h>81</h></coordinates><panel_attributes>ERC20
--
--
+ transfer(): bool
+ transferFrom(): bool
+ approve(): bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>54</x><y>414</y><w>135</w><h>72</h></coordinates><panel_attributes>lt=-
&lt; uses</panel_attributes><additional_attributes>10;10;10;60;130;60</additional_attributes></element><element><id>UMLClass</id><coordinates><x>648</x><y>162</y><w>117</w><h>99</h></coordinates><panel_attributes>Horse
--
- name: String
- speed: uint8
- breed: HorseBreed
- registered: bool</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>72</x><y>0</y><w>108</w><h>108</h></coordinates><panel_attributes>&lt;enumeration&gt;
HorseBreed
--
THOROUGHBRED
QUARTER_HORSE
ARABIAN
APPALOOSA
 MUSTANG</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>693</x><y>252</y><w>99</w><h>90</h></coordinates><panel_attributes>lt=-
m1=*
m2=*
&lt; participates</panel_attributes><additional_attributes>10;80;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>432</x><y>0</y><w>135</w><h>90</h></coordinates><panel_attributes>&lt;enumeration&gt;
UserRole
--
AUDITOR
BETTOR</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>630</x><y>324</y><w>144</w><h>162</h></coordinates><panel_attributes>Race
--
- id: uint256
- horses: Horse[]
- status: RaceStaus
- winnerHorseId: uint256
--
+ lockRace()
+ startRace()
+ nullifyRace()
+ completeRace()
+ declareWinningHorse()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>198</x><y>675</y><w>216</w><h>198</h></coordinates><panel_attributes>User
--
- id: uint256
- name: String
- address: address
- role: UserRole
- token: ERC20
- active: bool
--
+ registerUser(name, userAddress, role)
+ getUser(uint256): User
+ updateUser(uint256, string, address)
+ activate(uint256): void
+ deactivate(uint256): void
+ updateRole(uint256, bytes32): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>99</x><y>738</y><w>117</w><h>45</h></coordinates><panel_attributes>lt=-
m1=*
m2=1
&lt; place</panel_attributes><additional_attributes>10;20;110;20</additional_attributes></element><element><id>Relation</id><coordinates><x>99</x><y>783</y><w>117</w><h>45</h></coordinates><panel_attributes>lt=-
m1=*
m2=1
&lt; Audits</panel_attributes><additional_attributes>10;20;110;20</additional_attributes></element><element><id>Text</id><coordinates><x>234</x><y>603</y><w>54</w><h>27</h></coordinates><panel_attributes>Auditor
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element></diagram>